-rw-r--r--@  1 vitomed  staff   3928 22 Mar 23:19 README.md
drwxr-xr-x@ 10 vitomed  staff    320 22 Mar 23:19 dist
drwxr-xr-x@ 18 vitomed  staff    576 22 Mar 23:19 lib
drwxr-xr-x@ 18 vitomed  staff    576 22 Mar 23:19 lib.esm
drwxr-xr-x@ 17 vitomed  staff    544 28 Mar 19:01 node_modules
-rw-r--r--@  1 vitomed  staff  31172 28 Mar 19:01 package-lock.json
-rw-r--r--@  1 vitomed  staff   2226 28 Mar 18:59 package.json
drwxr-xr-x@  6 vitomed  staff    192 22 Mar 23:19 src.ts
vitomed@MBP-admin ethers % pwd
/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers
vitomed@MBP-admin ethers % cd ../../
vitomed@MBP-admin web3ts % make build 
npx tsc
vitomed@MBP-admin web3ts % make run 
node main.js
Tue, 28 Mar 2023 12:02:52 GMT storeCaller every 10min
COUNTER Contract {
  interface: Interface {
    fragments: [ [FunctionFragment], [FunctionFragment] ],
    _abiCoder: AbiCoder { coerceFunc: null },
    functions: {
      'last_caller()': [FunctionFragment],
      'storeCaller()': [FunctionFragment]
    },
    errors: {},
    events: {},
    structs: {},
    deploy: ConstructorFragment {
      name: null,
      type: 'constructor',
      inputs: [],
      payable: false,
      stateMutability: 'nonpayable',
      gas: null,
      _isFragment: true
    },
    _isInterface: true
  },
  provider: JsonRpcProvider {
    _isProvider: true,
    _events: [],
    _emitted: { block: -2 },
    disableCcipRead: false,
    formatter: Formatter { formats: [Object] },
    anyNetwork: false,
    _network: {
      name: 'goerli',
      chainId: 5,
      ensAddress: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',
      _defaultProvider: [Function]
    },
    _maxInternalBlockNumber: -1024,
    _lastBlockNumber: -2,
    _maxFilterBlockRange: 10,
    _pollingInterval: 4000,
    _fastQueryDate: 0,
    connection: {
      url: 'https://goerli.infura.io/v3/f0b04b881cb747b8b58ddaa2e4141886'
    },
    _nextId: 42
  },
  signer: Wallet {
    _isSigner: true,
    _signingKey: [Function (anonymous)],
    _mnemonic: [Function (anonymous)],
    address: '0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6',
    provider: JsonRpcProvider {
      _isProvider: true,
      _events: [],
      _emitted: [Object],
      disableCcipRead: false,
      formatter: [Formatter],
      anyNetwork: false,
      _network: [Object],
      _maxInternalBlockNumber: -1024,
      _lastBlockNumber: -2,
      _maxFilterBlockRange: 10,
      _pollingInterval: 4000,
      _fastQueryDate: 0,
      connection: [Object],
      _nextId: 42
    }
  },
  callStatic: {
    'last_caller()': [Function (anonymous)],
    'storeCaller()': [Function (anonymous)],
    last_caller: [Function (anonymous)],
    storeCaller: [Function (anonymous)]
  },
  estimateGas: {
    'last_caller()': [Function (anonymous)],
    'storeCaller()': [Function (anonymous)],
    last_caller: [Function (anonymous)],
    storeCaller: [Function (anonymous)]
  },
  functions: {
    'last_caller()': [Function (anonymous)],
    'storeCaller()': [Function (anonymous)],
    last_caller: [Function (anonymous)],
    storeCaller: [Function (anonymous)]
  },
  populateTransaction: {
    'last_caller()': [Function (anonymous)],
    'storeCaller()': [Function (anonymous)],
    last_caller: [Function (anonymous)],
    storeCaller: [Function (anonymous)]
  },
  filters: {},
  _runningEvents: {},
  _wrappedEmits: {},
  address: '0x919f095252B54128f8eF8D80986A712121AbE950',
  resolvedAddress: Promise { <pending> },
  'last_caller()': [Function (anonymous)],
  'storeCaller()': [Function (anonymous)],
  last_caller: [Function (anonymous)],
  storeCaller: [Function (anonymous)]
}
SELECTOR 0xedd3dfdf
Params created!
<ref *1> Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (error={"reason":"execution reverted: Automate.createTask: Duplicate task","code":"UNPREDICTABLE_GAS_LIMIT","method":"estimateGas","transaction":{"from":"0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6","maxPriorityFeePerGas":{"type":"BigNumber","hex":"0x59682f00"},"maxFeePerGas":{"type":"BigNumber","hex":"0x361bc59a80"},"to":"0xc1C6805B857Bef1f412519C4A842522431aFed39","data":"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","type":2,"accessList":null},"error":{"reason":"processing response error","code":"SERVER_ERROR","body":"{\"jsonrpc\":\"2.0\",\"id\":48,\"error\":{\"code\":3,\"data\":\"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000\",\"message\":\"execution reverted: Automate.createTask: Duplicate task\"}}","error":{"code":3,"data":"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000"},"requestBody":"{\"method\":\"eth_estimateGas\",\"params\":[{\"type\":\"0x2\",\"maxFeePerGas\":\"0x361bc59a80\",\"maxPriorityFeePerGas\":\"0x59682f00\",\"from\":\"0x42151ce59ea4a2dc0c22c19a278eeebc450deea6\",\"to\":\"0xc1c6805b857bef1f412519c4a842522431afed39\",\"data\":\"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"}],\"id\":48,\"jsonrpc\":\"2.0\"}","requestMethod":"POST","url":"https://goerli.infura.io/v3/f0b04b881cb747b8b58ddaa2e4141886"}}, tx={"data":"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","to":{},"from":"0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6","type":2,"maxFeePerGas":{"type":"BigNumber","hex":"0x361bc59a80"},"maxPriorityFeePerGas":{"type":"BigNumber","hex":"0x59682f00"},"nonce":{},"gasLimit":{},"chainId":{}}, code=UNPREDICTABLE_GAS_LIMIT, version=abstract-signer/5.7.0)
    at Logger.makeError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:238:21)
    at Logger.throwError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:247:20)
    at /Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/abstract-signer/lib/index.js:365:47
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Promise.all (index 7) {
  reason: 'cannot estimate gas; transaction may fail or may require manual gas limit',
  code: 'UNPREDICTABLE_GAS_LIMIT',
  error: Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (reason="execution reverted: Automate.createTask: Duplicate task", method="estimateGas", transaction={"from":"0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6","maxPriorityFeePerGas":{"type":"BigNumber","hex":"0x59682f00"},"maxFeePerGas":{"type":"BigNumber","hex":"0x361bc59a80"},"to":"0xc1C6805B857Bef1f412519C4A842522431aFed39","data":"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","type":2,"accessList":null}, error={"reason":"processing response error","code":"SERVER_ERROR","body":"{\"jsonrpc\":\"2.0\",\"id\":48,\"error\":{\"code\":3,\"data\":\"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000\",\"message\":\"execution reverted: Automate.createTask: Duplicate task\"}}","error":{"code":3,"data":"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000"},"requestBody":"{\"method\":\"eth_estimateGas\",\"params\":[{\"type\":\"0x2\",\"maxFeePerGas\":\"0x361bc59a80\",\"maxPriorityFeePerGas\":\"0x59682f00\",\"from\":\"0x42151ce59ea4a2dc0c22c19a278eeebc450deea6\",\"to\":\"0xc1c6805b857bef1f412519c4a842522431afed39\",\"data\":\"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"}],\"id\":48,\"jsonrpc\":\"2.0\"}","requestMethod":"POST","url":"https://goerli.infura.io/v3/f0b04b881cb747b8b58ddaa2e4141886"}, code=UNPREDICTABLE_GAS_LIMIT, version=providers/5.7.2)
      at Logger.makeError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:238:21)
      at Logger.throwError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:247:20)
      at checkError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:122:20)
      at JsonRpcProvider.<anonymous> (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:751:47)
      at step (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:48:23)
      at Object.throw (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:29:53)
      at rejected (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:21:65)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    reason: 'execution reverted: Automate.createTask: Duplicate task',
    code: 'UNPREDICTABLE_GAS_LIMIT',
    method: 'estimateGas',
    transaction: {
      from: '0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6',
      maxPriorityFeePerGas: [BigNumber],
      maxFeePerGas: [BigNumber],
      to: '0xc1C6805B857Bef1f412519C4A842522431aFed39',
      data: '0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
      type: 2,
      accessList: null
    },
    error: Error: processing response error (body="{\"jsonrpc\":\"2.0\",\"id\":48,\"error\":{\"code\":3,\"data\":\"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000\",\"message\":\"execution reverted: Automate.createTask: Duplicate task\"}}", error={"code":3,"data":"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000"}, requestBody="{\"method\":\"eth_estimateGas\",\"params\":[{\"type\":\"0x2\",\"maxFeePerGas\":\"0x361bc59a80\",\"maxPriorityFeePerGas\":\"0x59682f00\",\"from\":\"0x42151ce59ea4a2dc0c22c19a278eeebc450deea6\",\"to\":\"0xc1c6805b857bef1f412519c4a842522431afed39\",\"data\":\"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"}],\"id\":48,\"jsonrpc\":\"2.0\"}", requestMethod="POST", url="https://goerli.infura.io/v3/f0b04b881cb747b8b58ddaa2e4141886", code=SERVER_ERROR, version=web/5.7.1)
        at Logger.makeError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:238:21)
        at Logger.throwError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:247:20)
        at /Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/web/lib/index.js:313:32
        at step (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/web/lib/index.js:33:23)
        at Object.next (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/web/lib/index.js:14:53)
        at fulfilled (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/web/lib/index.js:5:58)
        at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
      reason: 'processing response error',
      code: 'SERVER_ERROR',
      body: '{"jsonrpc":"2.0","id":48,"error":{"code":3,"data":"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000","message":"execution reverted: Automate.createTask: Duplicate task"}}',
      error: [Error],
      requestBody: '{"method":"eth_estimateGas","params":[{"type":"0x2","maxFeePerGas":"0x361bc59a80","maxPriorityFeePerGas":"0x59682f00","from":"0x42151ce59ea4a2dc0c22c19a278eeebc450deea6","to":"0xc1c6805b857bef1f412519c4a842522431afed39","data":"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"}],"id":48,"jsonrpc":"2.0"}',
      requestMethod: 'POST',
      url: 'https://goerli.infura.io/v3/f0b04b881cb747b8b58ddaa2e4141886'
    }
  },
  tx: {
    data: '0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
    to: Promise { '0xc1C6805B857Bef1f412519C4A842522431aFed39' },
    from: '0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6',
    type: 2,
    maxFeePerGas: BigNumber { _hex: '0x361bc59a80', _isBigNumber: true },
    maxPriorityFeePerGas: BigNumber { _hex: '0x59682f00', _isBigNumber: true },
    nonce: Promise { 8 },
    gasLimit: Promise { <rejected> [Circular *1] },
    chainId: Promise { 5 }
  }
}
make: *** [run] Error 1
vitomed@MBP-admin web3ts % make build 
npx tsc
vitomed@MBP-admin web3ts % make run 
node main.js
Tue, 28 Mar 2023 12:05:40 GMT storeCaller every 10min
COUNTER Contract {
  interface: Interface {
    fragments: [ [FunctionFragment], [FunctionFragment] ],
    _abiCoder: AbiCoder { coerceFunc: null },
    functions: {
      'last_caller()': [FunctionFragment],
      'storeCaller()': [FunctionFragment]
    },
    errors: {},
    events: {},
    structs: {},
    deploy: ConstructorFragment {
      name: null,
      type: 'constructor',
      inputs: [],
      payable: false,
      stateMutability: 'nonpayable',
      gas: null,
      _isFragment: true
    },
    _isInterface: true
  },
  provider: JsonRpcProvider {
    _isProvider: true,
    _events: [],
    _emitted: { block: -2 },
    disableCcipRead: false,
    formatter: Formatter { formats: [Object] },
    anyNetwork: false,
    _network: {
      name: 'goerli',
      chainId: 5,
      ensAddress: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',
      _defaultProvider: [Function]
    },
    _maxInternalBlockNumber: -1024,
    _lastBlockNumber: -2,
    _maxFilterBlockRange: 10,
    _pollingInterval: 4000,
    _fastQueryDate: 0,
    connection: {
      url: 'https://goerli.infura.io/v3/f0b04b881cb747b8b58ddaa2e4141886'
    },
    _nextId: 42
  },
  signer: Wallet {
    _isSigner: true,
    _signingKey: [Function (anonymous)],
    _mnemonic: [Function (anonymous)],
    address: '0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6',
    provider: JsonRpcProvider {
      _isProvider: true,
      _events: [],
      _emitted: [Object],
      disableCcipRead: false,
      formatter: [Formatter],
      anyNetwork: false,
      _network: [Object],
      _maxInternalBlockNumber: -1024,
      _lastBlockNumber: -2,
      _maxFilterBlockRange: 10,
      _pollingInterval: 4000,
      _fastQueryDate: 0,
      connection: [Object],
      _nextId: 42
    }
  },
  callStatic: {
    'last_caller()': [Function (anonymous)],
    'storeCaller()': [Function (anonymous)],
    last_caller: [Function (anonymous)],
    storeCaller: [Function (anonymous)]
  },
  estimateGas: {
    'last_caller()': [Function (anonymous)],
    'storeCaller()': [Function (anonymous)],
    last_caller: [Function (anonymous)],
    storeCaller: [Function (anonymous)]
  },
  functions: {
    'last_caller()': [Function (anonymous)],
    'storeCaller()': [Function (anonymous)],
    last_caller: [Function (anonymous)],
    storeCaller: [Function (anonymous)]
  },
  populateTransaction: {
    'last_caller()': [Function (anonymous)],
    'storeCaller()': [Function (anonymous)],
    last_caller: [Function (anonymous)],
    storeCaller: [Function (anonymous)]
  },
  filters: {},
  _runningEvents: {},
  _wrappedEmits: {},
  address: '0x919f095252B54128f8eF8D80986A712121AbE950',
  resolvedAddress: Promise { <pending> },
  'last_caller()': [Function (anonymous)],
  'storeCaller()': [Function (anonymous)],
  last_caller: [Function (anonymous)],
  storeCaller: [Function (anonymous)]
}
SELECTOR 0xedd3dfdf
Params created!
<ref *1> Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (error={"reason":"execution reverted: Automate.createTask: Duplicate task","code":"UNPREDICTABLE_GAS_LIMIT","method":"estimateGas","transaction":{"from":"0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6","maxPriorityFeePerGas":{"type":"BigNumber","hex":"0x59682f00"},"maxFeePerGas":{"type":"BigNumber","hex":"0x2ee0600f46"},"to":"0xc1C6805B857Bef1f412519C4A842522431aFed39","data":"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","type":2,"accessList":null},"error":{"reason":"processing response error","code":"SERVER_ERROR","body":"{\"jsonrpc\":\"2.0\",\"id\":48,\"error\":{\"code\":3,\"data\":\"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000\",\"message\":\"execution reverted: Automate.createTask: Duplicate task\"}}","error":{"code":3,"data":"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000"},"requestBody":"{\"method\":\"eth_estimateGas\",\"params\":[{\"type\":\"0x2\",\"maxFeePerGas\":\"0x2ee0600f46\",\"maxPriorityFeePerGas\":\"0x59682f00\",\"from\":\"0x42151ce59ea4a2dc0c22c19a278eeebc450deea6\",\"to\":\"0xc1c6805b857bef1f412519c4a842522431afed39\",\"data\":\"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"}],\"id\":48,\"jsonrpc\":\"2.0\"}","requestMethod":"POST","url":"https://goerli.infura.io/v3/f0b04b881cb747b8b58ddaa2e4141886"}}, tx={"data":"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","to":{},"from":"0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6","type":2,"maxFeePerGas":{"type":"BigNumber","hex":"0x2ee0600f46"},"maxPriorityFeePerGas":{"type":"BigNumber","hex":"0x59682f00"},"nonce":{},"gasLimit":{},"chainId":{}}, code=UNPREDICTABLE_GAS_LIMIT, version=abstract-signer/5.7.0)
    at Logger.makeError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:238:21)
    at Logger.throwError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:247:20)
    at /Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/abstract-signer/lib/index.js:365:47
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Promise.all (index 7) {
  reason: 'cannot estimate gas; transaction may fail or may require manual gas limit',
  code: 'UNPREDICTABLE_GAS_LIMIT',
  error: Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (reason="execution reverted: Automate.createTask: Duplicate task", method="estimateGas", transaction={"from":"0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6","maxPriorityFeePerGas":{"type":"BigNumber","hex":"0x59682f00"},"maxFeePerGas":{"type":"BigNumber","hex":"0x2ee0600f46"},"to":"0xc1C6805B857Bef1f412519C4A842522431aFed39","data":"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","type":2,"accessList":null}, error={"reason":"processing response error","code":"SERVER_ERROR","body":"{\"jsonrpc\":\"2.0\",\"id\":48,\"error\":{\"code\":3,\"data\":\"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000\",\"message\":\"execution reverted: Automate.createTask: Duplicate task\"}}","error":{"code":3,"data":"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000"},"requestBody":"{\"method\":\"eth_estimateGas\",\"params\":[{\"type\":\"0x2\",\"maxFeePerGas\":\"0x2ee0600f46\",\"maxPriorityFeePerGas\":\"0x59682f00\",\"from\":\"0x42151ce59ea4a2dc0c22c19a278eeebc450deea6\",\"to\":\"0xc1c6805b857bef1f412519c4a842522431afed39\",\"data\":\"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"}],\"id\":48,\"jsonrpc\":\"2.0\"}","requestMethod":"POST","url":"https://goerli.infura.io/v3/f0b04b881cb747b8b58ddaa2e4141886"}, code=UNPREDICTABLE_GAS_LIMIT, version=providers/5.7.2)
      at Logger.makeError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:238:21)
      at Logger.throwError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:247:20)
      at checkError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:122:20)
      at JsonRpcProvider.<anonymous> (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:751:47)
      at step (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:48:23)
      at Object.throw (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:29:53)
      at rejected (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:21:65)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    reason: 'execution reverted: Automate.createTask: Duplicate task',
    code: 'UNPREDICTABLE_GAS_LIMIT',
    method: 'estimateGas',
    transaction: {
      from: '0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6',
      maxPriorityFeePerGas: [BigNumber],
      maxFeePerGas: [BigNumber],
      to: '0xc1C6805B857Bef1f412519C4A842522431aFed39',
      data: '0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
      type: 2,
      accessList: null
    },
    error: Error: processing response error (body="{\"jsonrpc\":\"2.0\",\"id\":48,\"error\":{\"code\":3,\"data\":\"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000\",\"message\":\"execution reverted: Automate.createTask: Duplicate task\"}}", error={"code":3,"data":"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000"}, requestBody="{\"method\":\"eth_estimateGas\",\"params\":[{\"type\":\"0x2\",\"maxFeePerGas\":\"0x2ee0600f46\",\"maxPriorityFeePerGas\":\"0x59682f00\",\"from\":\"0x42151ce59ea4a2dc0c22c19a278eeebc450deea6\",\"to\":\"0xc1c6805b857bef1f412519c4a842522431afed39\",\"data\":\"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"}],\"id\":48,\"jsonrpc\":\"2.0\"}", requestMethod="POST", url="https://goerli.infura.io/v3/f0b04b881cb747b8b58ddaa2e4141886", code=SERVER_ERROR, version=web/5.7.1)
        at Logger.makeError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:238:21)
        at Logger.throwError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:247:20)
        at /Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/web/lib/index.js:313:32
        at step (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/web/lib/index.js:33:23)
        at Object.next (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/web/lib/index.js:14:53)
        at fulfilled (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/web/lib/index.js:5:58)
        at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
      reason: 'processing response error',
      code: 'SERVER_ERROR',
      body: '{"jsonrpc":"2.0","id":48,"error":{"code":3,"data":"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000","message":"execution reverted: Automate.createTask: Duplicate task"}}',
      error: [Error],
      requestBody: '{"method":"eth_estimateGas","params":[{"type":"0x2","maxFeePerGas":"0x2ee0600f46","maxPriorityFeePerGas":"0x59682f00","from":"0x42151ce59ea4a2dc0c22c19a278eeebc450deea6","to":"0xc1c6805b857bef1f412519c4a842522431afed39","data":"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"}],"id":48,"jsonrpc":"2.0"}',
      requestMethod: 'POST',
      url: 'https://goerli.infura.io/v3/f0b04b881cb747b8b58ddaa2e4141886'
    }
  },
  tx: {
    data: '0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
    to: Promise { '0xc1C6805B857Bef1f412519C4A842522431aFed39' },
    from: '0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6',
    type: 2,
    maxFeePerGas: BigNumber { _hex: '0x2ee0600f46', _isBigNumber: true },
    maxPriorityFeePerGas: BigNumber { _hex: '0x59682f00', _isBigNumber: true },
    nonce: Promise { 8 },
    gasLimit: Promise { <rejected> [Circular *1] },
    chainId: Promise { 5 }
  }
}
make: *** [run] Error 1
vitomed@MBP-admin web3ts % make build 
npx tsc
vitomed@MBP-admin web3ts % make run 
node main.js
Tue, 28 Mar 2023 12:10:09 GMT storeCaller every 10min
SELECTOR 0xedd3dfdf
Params created!
<ref *1> Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (error={"reason":"execution reverted: Automate.createTask: Duplicate task","code":"UNPREDICTABLE_GAS_LIMIT","method":"estimateGas","transaction":{"from":"0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6","maxPriorityFeePerGas":{"type":"BigNumber","hex":"0x59682f00"},"maxFeePerGas":{"type":"BigNumber","hex":"0x34f0e7d8f4"},"to":"0xc1C6805B857Bef1f412519C4A842522431aFed39","data":"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","type":2,"accessList":null},"error":{"reason":"processing response error","code":"SERVER_ERROR","body":"{\"jsonrpc\":\"2.0\",\"id\":48,\"error\":{\"code\":3,\"data\":\"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000\",\"message\":\"execution reverted: Automate.createTask: Duplicate task\"}}","error":{"code":3,"data":"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000"},"requestBody":"{\"method\":\"eth_estimateGas\",\"params\":[{\"type\":\"0x2\",\"maxFeePerGas\":\"0x34f0e7d8f4\",\"maxPriorityFeePerGas\":\"0x59682f00\",\"from\":\"0x42151ce59ea4a2dc0c22c19a278eeebc450deea6\",\"to\":\"0xc1c6805b857bef1f412519c4a842522431afed39\",\"data\":\"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"}],\"id\":48,\"jsonrpc\":\"2.0\"}","requestMethod":"POST","url":"https://goerli.infura.io/v3/f0b04b881cb747b8b58ddaa2e4141886"}}, tx={"data":"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","to":{},"from":"0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6","type":2,"maxFeePerGas":{"type":"BigNumber","hex":"0x34f0e7d8f4"},"maxPriorityFeePerGas":{"type":"BigNumber","hex":"0x59682f00"},"nonce":{},"gasLimit":{},"chainId":{}}, code=UNPREDICTABLE_GAS_LIMIT, version=abstract-signer/5.7.0)
    at Logger.makeError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:238:21)
    at Logger.throwError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:247:20)
    at /Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/abstract-signer/lib/index.js:365:47
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Promise.all (index 7) {
  reason: 'cannot estimate gas; transaction may fail or may require manual gas limit',
  code: 'UNPREDICTABLE_GAS_LIMIT',
  error: Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (reason="execution reverted: Automate.createTask: Duplicate task", method="estimateGas", transaction={"from":"0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6","maxPriorityFeePerGas":{"type":"BigNumber","hex":"0x59682f00"},"maxFeePerGas":{"type":"BigNumber","hex":"0x34f0e7d8f4"},"to":"0xc1C6805B857Bef1f412519C4A842522431aFed39","data":"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","type":2,"accessList":null}, error={"reason":"processing response error","code":"SERVER_ERROR","body":"{\"jsonrpc\":\"2.0\",\"id\":48,\"error\":{\"code\":3,\"data\":\"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000\",\"message\":\"execution reverted: Automate.createTask: Duplicate task\"}}","error":{"code":3,"data":"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000"},"requestBody":"{\"method\":\"eth_estimateGas\",\"params\":[{\"type\":\"0x2\",\"maxFeePerGas\":\"0x34f0e7d8f4\",\"maxPriorityFeePerGas\":\"0x59682f00\",\"from\":\"0x42151ce59ea4a2dc0c22c19a278eeebc450deea6\",\"to\":\"0xc1c6805b857bef1f412519c4a842522431afed39\",\"data\":\"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"}],\"id\":48,\"jsonrpc\":\"2.0\"}","requestMethod":"POST","url":"https://goerli.infura.io/v3/f0b04b881cb747b8b58ddaa2e4141886"}, code=UNPREDICTABLE_GAS_LIMIT, version=providers/5.7.2)
      at Logger.makeError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:238:21)
      at Logger.throwError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:247:20)
      at checkError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:122:20)
      at JsonRpcProvider.<anonymous> (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:751:47)
      at step (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:48:23)
      at Object.throw (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:29:53)
      at rejected (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:21:65)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    reason: 'execution reverted: Automate.createTask: Duplicate task',
    code: 'UNPREDICTABLE_GAS_LIMIT',
    method: 'estimateGas',
    transaction: {
      from: '0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6',
      maxPriorityFeePerGas: [BigNumber],
      maxFeePerGas: [BigNumber],
      to: '0xc1C6805B857Bef1f412519C4A842522431aFed39',
      data: '0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
      type: 2,
      accessList: null
    },
    error: Error: processing response error (body="{\"jsonrpc\":\"2.0\",\"id\":48,\"error\":{\"code\":3,\"data\":\"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000\",\"message\":\"execution reverted: Automate.createTask: Duplicate task\"}}", error={"code":3,"data":"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000"}, requestBody="{\"method\":\"eth_estimateGas\",\"params\":[{\"type\":\"0x2\",\"maxFeePerGas\":\"0x34f0e7d8f4\",\"maxPriorityFeePerGas\":\"0x59682f00\",\"from\":\"0x42151ce59ea4a2dc0c22c19a278eeebc450deea6\",\"to\":\"0xc1c6805b857bef1f412519c4a842522431afed39\",\"data\":\"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"}],\"id\":48,\"jsonrpc\":\"2.0\"}", requestMethod="POST", url="https://goerli.infura.io/v3/f0b04b881cb747b8b58ddaa2e4141886", code=SERVER_ERROR, version=web/5.7.1)
        at Logger.makeError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:238:21)
        at Logger.throwError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:247:20)
        at /Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/web/lib/index.js:313:32
        at step (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/web/lib/index.js:33:23)
        at Object.next (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/web/lib/index.js:14:53)
        at fulfilled (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/web/lib/index.js:5:58)
        at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
      reason: 'processing response error',
      code: 'SERVER_ERROR',
      body: '{"jsonrpc":"2.0","id":48,"error":{"code":3,"data":"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000","message":"execution reverted: Automate.createTask: Duplicate task"}}',
      error: [Error],
      requestBody: '{"method":"eth_estimateGas","params":[{"type":"0x2","maxFeePerGas":"0x34f0e7d8f4","maxPriorityFeePerGas":"0x59682f00","from":"0x42151ce59ea4a2dc0c22c19a278eeebc450deea6","to":"0xc1c6805b857bef1f412519c4a842522431afed39","data":"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"}],"id":48,"jsonrpc":"2.0"}',
      requestMethod: 'POST',
      url: 'https://goerli.infura.io/v3/f0b04b881cb747b8b58ddaa2e4141886'
    }
  },
  tx: {
    data: '0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
    to: Promise { '0xc1C6805B857Bef1f412519C4A842522431aFed39' },
    from: '0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6',
    type: 2,
    maxFeePerGas: BigNumber { _hex: '0x34f0e7d8f4', _isBigNumber: true },
    maxPriorityFeePerGas: BigNumber { _hex: '0x59682f00', _isBigNumber: true },
    nonce: Promise { 8 },
    gasLimit: Promise { <rejected> [Circular *1] },
    chainId: Promise { 5 }
  }
}
make: *** [run] Error 1
vitomed@MBP-admin web3ts % make build
npx tsc
vitomed@MBP-admin web3ts % make run  
node main.js
Tue, 28 Mar 2023 12:11:36 GMT storeCaller every 10min
SELECTOR 0xedd3dfdf
Params created!
<ref *1> Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (error={"reason":"execution reverted: Automate.createTask: Duplicate task","code":"UNPREDICTABLE_GAS_LIMIT","method":"estimateGas","transaction":{"from":"0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6","maxPriorityFeePerGas":{"type":"BigNumber","hex":"0x59682f00"},"maxFeePerGas":{"type":"BigNumber","hex":"0x3772dd5424"},"to":"0xc1C6805B857Bef1f412519C4A842522431aFed39","data":"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","type":2,"accessList":null},"error":{"reason":"processing response error","code":"SERVER_ERROR","body":"{\"jsonrpc\":\"2.0\",\"id\":48,\"error\":{\"code\":3,\"data\":\"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000\",\"message\":\"execution reverted: Automate.createTask: Duplicate task\"}}","error":{"code":3,"data":"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000"},"requestBody":"{\"method\":\"eth_estimateGas\",\"params\":[{\"type\":\"0x2\",\"maxFeePerGas\":\"0x3772dd5424\",\"maxPriorityFeePerGas\":\"0x59682f00\",\"from\":\"0x42151ce59ea4a2dc0c22c19a278eeebc450deea6\",\"to\":\"0xc1c6805b857bef1f412519c4a842522431afed39\",\"data\":\"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"}],\"id\":48,\"jsonrpc\":\"2.0\"}","requestMethod":"POST","url":"https://goerli.infura.io/v3/f0b04b881cb747b8b58ddaa2e4141886"}}, tx={"data":"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","to":{},"from":"0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6","type":2,"maxFeePerGas":{"type":"BigNumber","hex":"0x3772dd5424"},"maxPriorityFeePerGas":{"type":"BigNumber","hex":"0x59682f00"},"nonce":{},"gasLimit":{},"chainId":{}}, code=UNPREDICTABLE_GAS_LIMIT, version=abstract-signer/5.7.0)
    at Logger.makeError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:238:21)
    at Logger.throwError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:247:20)
    at /Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/abstract-signer/lib/index.js:365:47
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Promise.all (index 7) {
  reason: 'cannot estimate gas; transaction may fail or may require manual gas limit',
  code: 'UNPREDICTABLE_GAS_LIMIT',
  error: Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (reason="execution reverted: Automate.createTask: Duplicate task", method="estimateGas", transaction={"from":"0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6","maxPriorityFeePerGas":{"type":"BigNumber","hex":"0x59682f00"},"maxFeePerGas":{"type":"BigNumber","hex":"0x3772dd5424"},"to":"0xc1C6805B857Bef1f412519C4A842522431aFed39","data":"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","type":2,"accessList":null}, error={"reason":"processing response error","code":"SERVER_ERROR","body":"{\"jsonrpc\":\"2.0\",\"id\":48,\"error\":{\"code\":3,\"data\":\"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000\",\"message\":\"execution reverted: Automate.createTask: Duplicate task\"}}","error":{"code":3,"data":"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000"},"requestBody":"{\"method\":\"eth_estimateGas\",\"params\":[{\"type\":\"0x2\",\"maxFeePerGas\":\"0x3772dd5424\",\"maxPriorityFeePerGas\":\"0x59682f00\",\"from\":\"0x42151ce59ea4a2dc0c22c19a278eeebc450deea6\",\"to\":\"0xc1c6805b857bef1f412519c4a842522431afed39\",\"data\":\"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"}],\"id\":48,\"jsonrpc\":\"2.0\"}","requestMethod":"POST","url":"https://goerli.infura.io/v3/f0b04b881cb747b8b58ddaa2e4141886"}, code=UNPREDICTABLE_GAS_LIMIT, version=providers/5.7.2)
      at Logger.makeError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:238:21)
      at Logger.throwError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:247:20)
      at checkError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:122:20)
      at JsonRpcProvider.<anonymous> (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:751:47)
      at step (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:48:23)
      at Object.throw (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:29:53)
      at rejected (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/providers/lib/json-rpc-provider.js:21:65)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    reason: 'execution reverted: Automate.createTask: Duplicate task',
    code: 'UNPREDICTABLE_GAS_LIMIT',
    method: 'estimateGas',
    transaction: {
      from: '0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6',
      maxPriorityFeePerGas: [BigNumber],
      maxFeePerGas: [BigNumber],
      to: '0xc1C6805B857Bef1f412519C4A842522431aFed39',
      data: '0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
      type: 2,
      accessList: null
    },
    error: Error: processing response error (body="{\"jsonrpc\":\"2.0\",\"id\":48,\"error\":{\"code\":3,\"data\":\"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000\",\"message\":\"execution reverted: Automate.createTask: Duplicate task\"}}", error={"code":3,"data":"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000"}, requestBody="{\"method\":\"eth_estimateGas\",\"params\":[{\"type\":\"0x2\",\"maxFeePerGas\":\"0x3772dd5424\",\"maxPriorityFeePerGas\":\"0x59682f00\",\"from\":\"0x42151ce59ea4a2dc0c22c19a278eeebc450deea6\",\"to\":\"0xc1c6805b857bef1f412519c4a842522431afed39\",\"data\":\"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"}],\"id\":48,\"jsonrpc\":\"2.0\"}", requestMethod="POST", url="https://goerli.infura.io/v3/f0b04b881cb747b8b58ddaa2e4141886", code=SERVER_ERROR, version=web/5.7.1)
        at Logger.makeError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:238:21)
        at Logger.throwError (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/logger/lib/index.js:247:20)
        at /Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/web/lib/index.js:313:32
        at step (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/web/lib/index.js:33:23)
        at Object.next (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/web/lib/index.js:14:53)
        at fulfilled (/Users/vitomed/PycharmProjects/my/web3ts/node_modules/ethers/node_modules/@ethersproject/web/lib/index.js:5:58)
        at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
      reason: 'processing response error',
      code: 'SERVER_ERROR',
      body: '{"jsonrpc":"2.0","id":48,"error":{"code":3,"data":"0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000234175746f6d6174652e6372656174655461736b3a204475706c6963617465207461736b0000000000000000000000000000000000000000000000000000000000","message":"execution reverted: Automate.createTask: Duplicate task"}}',
      error: [Error],
      requestBody: '{"method":"eth_estimateGas","params":[{"type":"0x2","maxFeePerGas":"0x3772dd5424","maxPriorityFeePerGas":"0x59682f00","from":"0x42151ce59ea4a2dc0c22c19a278eeebc450deea6","to":"0xc1c6805b857bef1f412519c4a842522431afed39","data":"0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"}],"id":48,"jsonrpc":"2.0"}',
      requestMethod: 'POST',
      url: 'https://goerli.infura.io/v3/f0b04b881cb747b8b58ddaa2e4141886'
    }
  },
  tx: {
    data: '0x3323b467000000000000000000000000919f095252b54128f8ef8d80986a712121abe950000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000004edd3dfdf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
    to: Promise { '0xc1C6805B857Bef1f412519C4A842522431aFed39' },
    from: '0x42151CE59ea4a2dc0C22c19A278eeebc450dEEA6',
    type: 2,
    maxFeePerGas: BigNumber { _hex: '0x3772dd5424', _isBigNumber: true },
    maxPriorityFeePerGas: BigNumber { _hex: '0x59682f00', _isBigNumber: true },
    nonce: Promise { 8 },
    gasLimit: Promise { <rejected> [Circular *1] },
    chainId: Promise { 5 }
  }
}
make: *** [run] Error 1
vitomed@MBP-admin web3ts % 